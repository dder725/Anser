{"ast":null,"code":"var _jsxFileName = \"/Users/tainecollins/Desktop/Projects/Anser/anser/src/pages/MessageThreads.js\";\nimport Header from \"../components/Header\";\nimport React, { Component } from 'react';\nimport { Row, Button, ListGroup } from \"react-bootstrap\";\nimport 'react-chat-elements/dist/main.css';\nimport { ChatList } from 'react-chat-elements';\nimport { AvatarGenerator } from 'random-avatar-generator';\nimport { Link, Redirect } from 'react-router-dom';\n\nvar humanNames = require('human-names');\n\nexport default class MessageThreads extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirect: false\n    };\n\n    this.handleOnClick = chatItem => {\n      this.setState({\n        redirect: true,\n        partnerName: chatItem.title\n      });\n    };\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        push: true,\n        to: {\n          pathname: '/chat',\n          state: {\n            partnerName: this.state.partnerName,\n            partnerImage: this.state.avatar\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 20\n        }\n      });\n    }\n\n    const generator = new AvatarGenerator();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ChatList, {\n      className: \"chat-list\",\n      onClick: this.handleOnClick,\n      dataSource: [{\n        avatar: generator.generateRandomAvatar(),\n        alt: 'Reactjs',\n        title: humanNames.maleRandom(),\n        subtitle: 'What are you doing?',\n        date: new Date(),\n        unread: 1\n      }, {\n        avatar: generator.generateRandomAvatar(),\n        alt: 'Reactjs',\n        title: humanNames.maleRandom(),\n        subtitle: 'I am ready to break the ice!',\n        date: new Date(),\n        unread: 2\n      }, {\n        avatar: generator.generateRandomAvatar(),\n        alt: 'Reactjs',\n        title: humanNames.maleRandom(),\n        subtitle: 'I am ready to break the ice!',\n        date: new Date(),\n        unread: 2\n      }, {\n        avatar: generator.generateRandomAvatar(),\n        alt: 'Reactjs',\n        title: humanNames.maleRandom(),\n        subtitle: 'I am ready to break the ice!',\n        date: new Date(),\n        unread: 2\n      }, {\n        avatar: generator.generateRandomAvatar(),\n        alt: 'Reactjs',\n        title: humanNames.maleRandom(),\n        subtitle: 'I am ready to break the ice!',\n        date: new Date(),\n        unread: 2\n      }, {\n        avatar: generator.generateRandomAvatar(),\n        alt: 'Reactjs',\n        title: humanNames.maleRandom(),\n        subtitle: 'I am ready to break the ice!',\n        date: new Date(),\n        unread: 2\n      }, {\n        avatar: generator.generateRandomAvatar(),\n        alt: 'Reactjs',\n        title: humanNames.maleRandom(),\n        subtitle: 'I am ready to break the ice!',\n        date: new Date(),\n        unread: 2\n      }, {\n        avatar: generator.generateRandomAvatar(),\n        alt: 'Reactjs',\n        title: humanNames.maleRandom(),\n        subtitle: 'I am ready to break the ice!',\n        date: new Date(),\n        unread: 2\n      }, {\n        avatar: generator.generateRandomAvatar(),\n        alt: 'Reactjs',\n        title: humanNames.maleRandom(),\n        subtitle: 'I am ready to break the ice!',\n        date: new Date(),\n        unread: 2\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/matching\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 86\n      }\n    }, \"Match with new people!\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/tainecollins/Desktop/Projects/Anser/anser/src/pages/MessageThreads.js"],"names":["Header","React","Component","Row","Button","ListGroup","ChatList","AvatarGenerator","Link","Redirect","humanNames","require","MessageThreads","state","redirect","handleOnClick","chatItem","setState","partnerName","title","render","pathname","partnerImage","avatar","generator","generateRandomAvatar","alt","maleRandom","subtitle","date","Date","unread"],"mappings":"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","sourcesContent":["import Header from \"../components/Header\"\nimport React, { Component } from 'react'\nimport { Row, Button, ListGroup } from \"react-bootstrap\"\nimport 'react-chat-elements/dist/main.css';\nimport { ChatList } from 'react-chat-elements'\nimport { AvatarGenerator } from 'random-avatar-generator';\nimport { Link, Redirect } from 'react-router-dom'\nvar humanNames = require('human-names');\nexport default class MessageThreads extends Component {\n   state = {\n       redirect: false,\n   }\n    \n    handleOnClick = (chatItem) => {\n        this.setState({ redirect: true, partnerName: chatItem.title  });\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect push to={{\n                pathname: '/chat',\n                state: { partnerName: this.state.partnerName, partnerImage: this.state.avatar }\n            }} />;\n        }\n        const generator = new AvatarGenerator();\n        return (<div>\n            <Header /><ChatList\n                className='chat-list'\n                onClick={this.handleOnClick}\n                dataSource={[\n                    {\n                        avatar: generator.generateRandomAvatar(),\n                        alt: 'Reactjs',\n                        title: humanNames.maleRandom(),\n                        subtitle: 'What are you doing?',\n                        date: new Date(),\n                        unread: 1,\n                    }, {\n                        avatar: generator.generateRandomAvatar(),\n                        alt: 'Reactjs',\n                        title: humanNames.maleRandom(),\n                        subtitle: 'I am ready to break the ice!',\n                        date: new Date(),\n                        unread: 2,\n                    }, {\n                        avatar: generator.generateRandomAvatar(),\n                        alt: 'Reactjs',\n                        title: humanNames.maleRandom(),\n                        subtitle: 'I am ready to break the ice!',\n                        date: new Date(),\n                        unread: 2,\n                    }, {\n                        avatar: generator.generateRandomAvatar(),\n                        alt: 'Reactjs',\n                        title: humanNames.maleRandom(),\n                        subtitle: 'I am ready to break the ice!',\n                        date: new Date(),\n                        unread: 2,\n                    }, {\n                        avatar: generator.generateRandomAvatar(),\n                        alt: 'Reactjs',\n                        title: humanNames.maleRandom(),\n                        subtitle: 'I am ready to break the ice!',\n                        date: new Date(),\n                        unread: 2,\n                    }, {\n                        avatar: generator.generateRandomAvatar(),\n                        alt: 'Reactjs',\n                        title: humanNames.maleRandom(),\n                        subtitle: 'I am ready to break the ice!',\n                        date: new Date(),\n                        unread: 2,\n                    }, {\n                        avatar: generator.generateRandomAvatar(),\n                        alt: 'Reactjs',\n                        title: humanNames.maleRandom(),\n                        subtitle: 'I am ready to break the ice!',\n                        date: new Date(),\n                        unread: 2,\n                    }, {\n                        avatar: generator.generateRandomAvatar(),\n                        alt: 'Reactjs',\n                        title: humanNames.maleRandom(),\n                        subtitle: 'I am ready to break the ice!',\n                        date: new Date(),\n                        unread: 2,\n                    }, {\n                        avatar: generator.generateRandomAvatar(),\n                        alt: 'Reactjs',\n                        title: humanNames.maleRandom(),\n                        subtitle: 'I am ready to break the ice!',\n                        date: new Date(),\n                        unread: 2,\n                    }\n                ]} /><div class=\"d-flex justify-content-center\"><Link to='/matching'><Button>Match with new people!</Button></Link></div></div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}