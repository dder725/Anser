{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'react', 'react-dom', 'lodash/isEqual', 'progressbar.js'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('react'), require('react-dom'), require('lodash/isEqual'), require('progressbar.js'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.react, global.reactDom, global.isEqual, global.progressbar);\n    global.main = mod.exports;\n  }\n})(this, function (module, _react, _reactDom, _isEqual, _progressbar) {\n  'use strict';\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _isEqual2 = _interopRequireDefault(_isEqual);\n\n  var _progressbar2 = _interopRequireDefault(_progressbar);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var Shape = function (_Component) {\n    _inherits(Shape, _Component);\n\n    function Shape(props) {\n      _classCallCheck(this, Shape);\n\n      var _this = _possibleConstructorReturn(this, (Shape.__proto__ || Object.getPrototypeOf(Shape)).call(this, props));\n\n      _this.state = {\n        shape: null\n      };\n      return _this;\n    }\n\n    _createClass(Shape, [{\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            containerStyle = _props.containerStyle,\n            containerClassName = _props.containerClassName;\n        return _react2.default.createElement('div', {\n          className: containerClassName,\n          style: containerStyle,\n          ref: 'progressBar'\n        });\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (!(0, _isEqual2.default)(this.props.options, nextProps.options)) {\n          this._destroy();\n\n          this._create(nextProps, this.props);\n\n          return;\n        }\n\n        this._animateProgress(nextProps.progress);\n\n        this._setText(nextProps.text);\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this._create(this.props);\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        this._destroy();\n      }\n    }, {\n      key: '_create',\n      value: function _create(props, oldProps) {\n        if (this.state.shape !== null) {\n          throw new Error('Progressbar is already created');\n        } // setState function is not used to prevent a new render cycle\n        // This handling happens outside of React component's lifecycle\n\n\n        var container = (0, _reactDom.findDOMNode)(this.refs.progressBar);\n        this.state.shape = new props.ShapeClass(container, props.options);\n\n        if (props.initialAnimate) {\n          if (oldProps) {\n            this._setProgress(oldProps.progress);\n          }\n\n          this._animateProgress(props.progress);\n        } else {\n          this._setProgress(props.progress);\n        }\n\n        this._setText(props.text);\n      }\n    }, {\n      key: '_destroy',\n      value: function _destroy() {\n        if (this.state.shape) {\n          this.state.shape.destroy();\n          this.state.shape = null;\n        }\n      }\n    }, {\n      key: '_animateProgress',\n      value: function _animateProgress(progress) {\n        this.state.shape.animate(progress);\n      }\n    }, {\n      key: '_setProgress',\n      value: function _setProgress(progress) {\n        this.state.shape.set(progress);\n      }\n    }, {\n      key: '_setText',\n      value: function _setText(text) {\n        if (text) {\n          this.state.shape.setText(text);\n        }\n      }\n    }]);\n\n    return Shape;\n  }(_react.Component);\n\n  ;\n\n  var Line = function (_Component2) {\n    _inherits(Line, _Component2);\n\n    function Line() {\n      _classCallCheck(this, Line);\n\n      return _possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).apply(this, arguments));\n    }\n\n    _createClass(Line, [{\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement(Shape, _extends({}, this.props, {\n          ShapeClass: _progressbar2.default.Line\n        }));\n      }\n    }]);\n\n    return Line;\n  }(_react.Component);\n\n  ;\n\n  var Circle = function (_Component3) {\n    _inherits(Circle, _Component3);\n\n    function Circle() {\n      _classCallCheck(this, Circle);\n\n      return _possibleConstructorReturn(this, (Circle.__proto__ || Object.getPrototypeOf(Circle)).apply(this, arguments));\n    }\n\n    _createClass(Circle, [{\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement(Shape, _extends({}, this.props, {\n          ShapeClass: _progressbar2.default.Circle\n        }));\n      }\n    }]);\n\n    return Circle;\n  }(_react.Component);\n\n  ;\n\n  var SemiCircle = function (_Component4) {\n    _inherits(SemiCircle, _Component4);\n\n    function SemiCircle() {\n      _classCallCheck(this, SemiCircle);\n\n      return _possibleConstructorReturn(this, (SemiCircle.__proto__ || Object.getPrototypeOf(SemiCircle)).apply(this, arguments));\n    }\n\n    _createClass(SemiCircle, [{\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement(Shape, _extends({}, this.props, {\n          ShapeClass: _progressbar2.default.SemiCircle\n        }));\n      }\n    }]);\n\n    return SemiCircle;\n  }(_react.Component);\n\n  ;\n  module.exports = {\n    Line: Line,\n    Circle: Circle,\n    SemiCircle: SemiCircle\n  };\n});","map":null,"metadata":{},"sourceType":"script"}